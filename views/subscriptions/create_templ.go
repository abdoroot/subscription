// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package subscriptions

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/abdoroot/subscription/views/components"
	"github.com/abdoroot/subscription/views/layouts"
)

func Create() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"page\" class=\"py-2 pb-20\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CreateHeader().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex flex-col text-sm\"><div class=\"px-6 pb-6 w-full bg-secondarygray\"><div class=\"flex pt-4 items-center\"><div class=\"w-2/12 text-red-500\">Customer Name*</div><div class=\"w-5/12 flex\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.CustomerSearchInput().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div><div class=\"flex flex-col px-6 w-8/12\"><div class=\"flex pt-4 items-center\"><div class=\"w-3/12 text-red-500\">Select Product#*</div><div class=\"w-4/12 flex\"><select name=\"\" class=\"w-full bg-white border rounded border:secondarygray py-1.5 px-2\"><option>Vpn Service</option> <option>Silver</option> <option>Milk</option></select></div></div></div><div class=\"px-6 my-3 w-8/12 \"><div class=\"flex uppercase text-base font-medium text-muted\"><span>Plan</span></div></div><hr class=\"h-auto mx-6 mb-6 w-full border-b border-secondarygraydarker\"><div class=\"w-11/12\"><div class=\"px-6\"><table class=\"text-xs text-right\" id=\"invoice_items\"><thead><tr><th class=\"py-2 text-left border-l-0\">PLAN NAME</th><th class=\"py-2 px-1\">QUANTITY</th><th class=\"py-2 px-1\">PRICE</th><th class=\"py-2 pr-2 px-1\">AMOUNT</th></tr></thead> <tbody class=\"text-base\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.SubscriptionCreatePlanTableRow(components.SubscriptionCreatePlanTableRowCfg{}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tbody></table></div></div><div class=\"px-6 my-3 w-8/12 \"><div class=\"flex uppercase text-base font-medium text-muted\"><span>Coupon</span></div></div><hr class=\"h-auto mx-6 mb-3 w-full border-b border-secondarygraydarker\"><div class=\"px-6 w-8/12\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Button("Apply Coupon", components.ColorBlue, true, nil).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><!-- Coupon table will be here --><!-- \n\t\ttd * 3 \n\t\t 1 -> COUPON\t\n\t\t 2 -> COUPON CODE\t\t\n\t\t 3 -> VALUE\t\n\t\t--><div class=\"px-6 my-3 w-8/12 \"><div class=\"flex uppercase text-base font-medium text-muted\"><span>Subscription Term</span></div></div><hr class=\"h-auto mx-6 mb-6 w-full border-b border-secondarygraydarker\"><div class=\"flex flex-col px-6 w-8/12\"><div class=\"flex pt-4 items-center\"><div class=\"w-3/12 text-red-500\">Subscription Number#*</div><div class=\"w-4/12 flex\"><input type=\"text\" name=\"\" value=\"INV-000004\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></div></div></div><div class=\"flex flex-col px-6 w-8/12\"><div class=\"flex pt-4 items-center\"><div class=\"w-3/12\">Start Date</div><div class=\"w-4/12 flex\"><input type=\"date\" name=\"\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></div></div></div><div class=\"flex flex-col px-6 w-8/12\"><div class=\"flex pt-4 items-center\"><div class=\"w-3/12\">Expires After</div><div class=\"w-4/12 flex flex-col\"><div class=\"flex items-center\"><input type=\"text\" value=\"\" disabled class=\"w-full py-1.5 px-2 rounded-l border-l border-t border-b border:secondarygray focus:border-secondaryblue\"><div class=\"bg-secondarygraydarker border-l border-t border-b border-secondarygraydarker px-3 py-1.5 rounded-r\">cycles</div></div><div class=\"pt-2 flex\"><input checked type=\"checkbox\" value=\"\" name=\"aaa\" class=\"w-4 h-4 focus:bg-secondaryblue focus:ring-2\"> <label class=\"ms-2\">Never Expires</label></div></div></div></div><div class=\"flex flex-col px-6 w-8/12\"><div class=\"flex pt-4 items-center\"><div class=\"w-3/12\">Reference </div><div class=\"w-4/12 flex\"><input type=\"text\" name=\"\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></div></div></div><div class=\"flex flex-col px-6 w-8/12\"><div class=\"flex pt-4 items-center\"><div class=\"w-3/12\">Payment Mode </div><div class=\"w-4/12 flex\"><input type=\"checkbox\" value=\"\" name=\"aaa\" class=\"w-4 h-4 focus:bg-secondaryblue focus:ring-2\"> <label class=\"ms-2\">Collect payment offline</label></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CreateFooter().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func FullCreate() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var3 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			templ_7745c5c3_Err = Create().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layouts.AdminApp().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func CreateHeader() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"border-b border:secondarygray pb-2 px-6\"><div class=\"text-2xl font-semibold\">New Subscription</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func CreateFooter() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"fixed bottom-0 px-6 py-8 w-full h-12 bg-white shadow-md flex items-center text-sm border-t border-gray\"><div class=\"flex flex-row w-full\"><div class=\"w-6/12\"><div class=\"flex space-x-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Button("Continue", components.ColorGreen, false, nil).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Button("Cancel", components.ColorGray, false, nil).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
