// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package subscriptionitem

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/abdoroot/subscription/views/components"
	"github.com/abdoroot/subscription/views/layouts"
)

func CreatePlan() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"page\" class=\"px-3 py-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = CreatePlanHeader().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex flex-col text-sm pb-5\"><div class=\"flex pt-6 items-center\"><div class=\"w-2/12 text-red-500\">Plan Name*</div><div class=\"w-4/12 flex\"><input type=\"text\" name=\"\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12 text-red-500\">Plan Code*</div><div class=\"w-4/12 flex\"><input type=\"text\" name=\"\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></div><div class=\"w-6/12 text-muted px-4\">A unique code of your choice which lets you identify this plan.</div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12\">Unit Name</div><div class=\"w-4/12 flex\"><select class=\"w-full bg-white rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\" data-twe-select-filter=\"true\"><option value=\"1\">Option 1</option> <option value=\"2\">Option 2</option></select></div><div class=\"w-6/12 text-muted px-4\">A name of your choice to refer to one unit of the plan.</div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12  text-red-500\">Price*</div><div class=\"w-4/12 flex items-center\"><div class=\"bg-secondarygraydarker border-r border-t border-b border:secondarygraydarker px-3 py-1.5 rounded-l\">AED</div><input type=\"text\" class=\"py-1.5 px-2 w-full rounded-r border-r border-t border-b border:secondarygray  focus:border-secondaryblue\"></div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12  text-red-500\">Bill Every*</div><div class=\"w-4/12 flex items-center space-x-2\"><input type=\"text\" name=\"\" value=\"1\" class=\"w-5/12 text-right rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"> <select class=\"w-7/12 bg-white rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\" data-twe-select-filter=\"true\"><option value=\"1\">Week(s)</option> <option value=\"1\">Month(s)</option> <option value=\"2\">Year 2</option></select></div></div><div class=\"flex pt-4\"><div class=\"w-2/12  text-red-500\">Billing Cycles*</div><div class=\"w-4/12 flex space-x-2\"><div class=\"flex flex-col space-y-2\"><div class=\"flex \"><input checked type=\"radio\" value=\"business\" name=\"billing-cycles\" class=\"w-4 h-4 focus:bg-secondaryblue focus:ring-3\"> <label class=\"ms-2\">Auto-renews until canceled</label></div><div class=\"flex\"><input type=\"radio\" value=\"individual\" name=\"billing-cycles\" class=\"w-4 h-4 focus:bg-secondaryblue focus:ring-2\"> <label class=\"ms-2\">Expires after a specified no. of billing cycles</label></div></div></div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12 flex flex-col\"><span>Free Trial*</span> <span class=\"text-muted text-sm\">in days</span></div><div class=\"w-4/12 flex\"><input type=\"text\" name=\"\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12 flex flex-col\">Setup fee</div><div class=\"w-4/12 flex\"><input type=\"text\" name=\"\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12 text-red-500\">Type*</div><div class=\"w-4/12 flex\"><div class=\"flex space-x-2\"><div class=\"flex items-center\"><input checked type=\"radio\" value=\"business\" name=\"plan_type\" class=\"w-4 h-4 focus:bg-secondaryblue focus:ring-3\"> <label class=\"ms-2\">Goods</label></div><div class=\"flex items-center\"><input type=\"radio\" value=\"individual\" name=\"plan_type\" class=\"w-4 h-4 focus:bg-secondaryblue focus:ring-2\"> <label class=\"ms-2\">Service</label></div></div></div></div><div class=\"flex pt-4 items-center\"><div class=\"w-2/12\">Plan Description</div><div class=\"w-4/12 flex\"><textarea type=\"text\" name=\"\" class=\"w-full rounded border border:secondarygray py-1.5 px-2 focus:border-secondaryblue\"></textarea></div></div><hr class=\"h-auto my-6 w-full border-b border-secondarygraydarker\"><div class=\"flex items-center\"><div class=\"w-2/12\"></div><div class=\"w-4/12 flex space-x-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Button("Save", components.ColorGreen, false, nil).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Button("Cancel", components.ColorGray, false, nil).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func CreatePlanHeader() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"border-b border:secondarygray py-2\"><div class=\"text-2xl font-semibold\">Add Plan</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func FullCreatePlan() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var4 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			templ_7745c5c3_Err = CreatePlan().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layouts.AdminApp().Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
